{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamil\\\\Downloads\\\\My-React_Projects\\\\React-Projects\\\\AdvancedReactRouter\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './components/pages/HomePage';\nimport EventPages, { loader as eventsLoader } from './components/pages/EventPage';\nimport EventDetailPage, { loader as detailsLoader } from './components/pages/EventDetailPage';\nimport NewEventPage, { action as newEventAction } from './components/pages/NewEventPage';\nimport EditEventPage from './components/pages/EditEventPage';\nimport RootLayout from './components/pages/Root';\nimport EventRootLayout from './components/pages/EventsRoot';\nimport ErrorPage from './components/pages/Error';\n\n//adding loader property\n//fetches data before a component renders\n\n//instead of fetching inside my EventsPages component,\n//the loader fetches the data first, then renders the component\n\n//can't get the loaded data if its on a higher level than the fetch\n//so our rootlayout component cant access the loaded data since its higher\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 30\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(EventRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventPages, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: '/events/:eventId',\n      id: 'event-detail',\n      loader: detailsLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }, this)\n      }, {\n        path: '/events/:eventId/edit',\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 24\n        }, this)\n      }]\n    }, {\n      path: '/events/new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 42\n      }, this),\n      action: newEventAction\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventPages","loader","eventsLoader","EventDetailPage","detailsLoader","NewEventPage","action","newEventAction","EditEventPage","RootLayout","EventRootLayout","ErrorPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["C:/Users/tamil/Downloads/My-React_Projects/React-Projects/AdvancedReactRouter/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport {createBrowserRouter, RouterProvider} from 'react-router-dom'\nimport HomePage from './components/pages/HomePage';\nimport EventPages, {loader as eventsLoader} from './components/pages/EventPage';\nimport EventDetailPage, {loader as detailsLoader} from './components/pages/EventDetailPage';\nimport NewEventPage, {action as newEventAction } from './components/pages/NewEventPage';\nimport EditEventPage from './components/pages/EditEventPage';\nimport RootLayout from './components/pages/Root';\nimport EventRootLayout from './components/pages/EventsRoot';\nimport ErrorPage from './components/pages/Error';\n\n\n\n//adding loader property\n//fetches data before a component renders\n\n//instead of fetching inside my EventsPages component,\n//the loader fetches the data first, then renders the component\n\n\n//can't get the loaded data if its on a higher level than the fetch\n//so our rootlayout component cant access the loaded data since its higher\n\nconst router = createBrowserRouter([\n  {path: '/',\n    element:<RootLayout/>,\n    errorElement: <ErrorPage/> ,\n    children:[\n      {index: true, element: <HomePage/>},\n      {path: '/events',\n        element: <EventRootLayout/>,\n        children: [\n          {index: true, \n            element:<EventPages/>,\n            loader: eventsLoader\n          },\n          {\n            path: '/events/:eventId',\n            id: 'event-detail',\n            loader: detailsLoader ,\n            children: [\n              {index: true,\n             element: <EventDetailPage/>,\n            },\n\n            {path: '/events/:eventId/edit', \n              \n              element: <EditEventPage/>}\n\n            ]\n          },\n          \n          {path: '/events/new', element: <NewEventPage/>, action: newEventAction},\n          \n        ]\n      }\n      \n    ]\n  },\n  \n])\n\nfunction App() {\n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACpE,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,UAAU,IAAGC,MAAM,IAAIC,YAAY,QAAO,8BAA8B;AAC/E,OAAOC,eAAe,IAAGF,MAAM,IAAIG,aAAa,QAAO,oCAAoC;AAC3F,OAAOC,YAAY,IAAGC,MAAM,IAAIC,cAAc,QAAQ,iCAAiC;AACvF,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,SAAS,MAAM,0BAA0B;;AAIhD;AACA;;AAEA;AACA;;AAGA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGjB,mBAAmB,CAAC,CACjC;EAACkB,IAAI,EAAE,GAAG;EACRC,OAAO,eAACH,OAAA,CAACJ,UAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EACrBC,YAAY,eAAER,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EAC1BE,QAAQ,EAAC,CACP;IAACC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACd,QAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EACnC;IAACL,IAAI,EAAE,SAAS;IACdC,OAAO,eAAEH,OAAA,CAACH,eAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IAC3BE,QAAQ,EAAE,CACR;MAACC,KAAK,EAAE,IAAI;MACVP,OAAO,eAACH,OAAA,CAACb,UAAU;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MACrBnB,MAAM,EAAEC;IACV,CAAC,EACD;MACEa,IAAI,EAAE,kBAAkB;MACxBS,EAAE,EAAE,cAAc;MAClBvB,MAAM,EAAEG,aAAa;MACrBkB,QAAQ,EAAE,CACR;QAACC,KAAK,EAAE,IAAI;QACbP,OAAO,eAAEH,OAAA,CAACV,eAAe;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAC3B,CAAC,EAED;QAACL,IAAI,EAAE,uBAAuB;QAE5BC,OAAO,eAAEH,OAAA,CAACL,aAAa;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,CAAC;IAG9B,CAAC,EAED;MAACL,IAAI,EAAE,aAAa;MAAEC,OAAO,eAAEH,OAAA,CAACR,YAAY;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MAAEd,MAAM,EAAEC;IAAc,CAAC;EAG3E,CAAC;AAGL,CAAC,CAEF,CAAC;AAEF,SAASkB,GAAGA,CAAA,EAAG;EACb,oBAAOZ,OAAA,CAACf,cAAc;IAACgB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C;AAACM,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}