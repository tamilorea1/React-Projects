{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamil\\\\Downloads\\\\My-React_Projects\\\\React-Projects\\\\AdvancedReactRouter\\\\frontend\\\\src\\\\components\\\\pages\\\\NewEventPage.js\";\nimport EventForm from '../EventForm';\nimport { redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 13\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not save event'\n    }), {\n      status: 500\n    });\n  }\n  return redirect('/');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","redirect","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","Response","message","status","$RefreshReg$"],"sources":["C:/Users/tamil/Downloads/My-React_Projects/React-Projects/AdvancedReactRouter/frontend/src/components/pages/NewEventPage.js"],"sourcesContent":["import EventForm from '../EventForm'\r\nimport {redirect} from 'react-router-dom'\r\n\r\nfunction NewEventPage() {\r\n    return  <EventForm />\r\n        \r\n    \r\n}\r\n\r\nexport default NewEventPage;\r\n\r\nexport async function action({request, params}) {\r\n    const data = await request.formData()\r\n\r\n\r\n    const eventData = {\r\n        title: data.get('title'),\r\n        image: data.get('image'),\r\n        date: data.get('date'),\r\n        description: data.get('description')\r\n    }\r\n\r\n    const response = await fetch('http://localhost:8080/events', {\r\n        method: 'POST',\r\n        headers:{\r\n            'Content-Type' : 'application/json'\r\n        },\r\n        body: JSON.stringify(eventData)\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Response(JSON.stringify({message: 'Could not save event' }), {status: 500})\r\n    }\r\n\r\n    return redirect('/')\r\n}"],"mappings":";AAAA,OAAOA,SAAS,MAAM,cAAc;AACpC,SAAQC,QAAQ,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,YAAYA,CAAA,EAAG;EACpB,oBAAQD,OAAA,CAACH,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAGzB;AAACC,EAAA,GAJQL,YAAY;AAMrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC5C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAGrC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAC;MACJ,cAAc,EAAG;IACrB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,QAAQ,CAACH,IAAI,CAACC,SAAS,CAAC;MAACG,OAAO,EAAE;IAAuB,CAAC,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACzF;EAEA,OAAO9B,QAAQ,CAAC,GAAG,CAAC;AACxB;AAAC,IAAAQ,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}