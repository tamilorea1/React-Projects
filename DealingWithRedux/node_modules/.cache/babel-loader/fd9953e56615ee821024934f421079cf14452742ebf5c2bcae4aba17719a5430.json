{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamil\\\\Downloads\\\\My-React_Projects\\\\React-Projects\\\\DealingWithRedux\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uiActions } from './store/Ui-Slice';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const showCart = useSelector(state => state.ui.cartIsVisibile);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!'\n      }));\n      const response = await fetch('https://learning-redux-4fb13-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Sending cart data successfully!'\n      }));\n    };\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Sending cart data failed!'\n      }));\n    });\n  }, [cart, dispatch]);\n  useEffect(() => {\n    const fetchCartData = asy;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VR1M6IVuuPBVs+1RM1Xbj4a8yvI=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","Cart","Layout","Products","useSelector","useDispatch","uiActions","Notification","jsxDEV","_jsxDEV","isInitial","App","_s","showCart","state","ui","cartIsVisibile","cart","dispatch","notification","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error","fetchCartData","asy","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tamil/Downloads/My-React_Projects/React-Projects/DealingWithRedux/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { uiActions } from './store/Ui-Slice';\nimport Notification from './components/UI/Notification'\n\nlet isInitial = true;\n\nfunction App() {\n  const showCart = useSelector( state => state.ui.cartIsVisibile)\n  const cart = useSelector(state => state.cart)\n  const dispatch = useDispatch()\n  const notification = useSelector(state => state.ui.notification)\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!',\n      }))\n      const response = await fetch('https://learning-redux-4fb13-default-rtdb.firebaseio.com/cart.json', {\n      method: 'PUT',\n      body: JSON.stringify(cart)\n    });\n\n    if (!response.ok) {\n      throw new Error('Sending cart data failed')\n    }\n\n\n    dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Sending cart data successfully!',\n      }))\n\n    }\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    \n    sendCartData().catch((error) => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Sending cart data failed!',\n      }))\n    })\n\n  }, [cart, dispatch])\n\n\nuseEffect(() => {\n\n  const fetchCartData = asy\n\n}, [])\n\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />)}\n\n      <Layout>\n      {showCart && <Cart /> }\n      <Products />\n    </Layout>\n    </Fragment>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}