{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamil\\\\Downloads\\\\My-React_Projects\\\\React-Projects\\\\DealingWithRedux\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uiActions } from './store/Ui-Slice';\nimport Notification from './components/UI/Notification';\nimport { cartActions } from './store/cart-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const showCart = useSelector(state => state.ui.cartIsVisibile);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!'\n      }));\n      const response = await fetch('https://learning-redux-4fb13-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Sending cart data successfully!'\n      }));\n    };\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Sending cart data failed!'\n      }));\n    });\n  }, [cart, dispatch]);\n  useEffect(() => {\n    const fetchCartData = async () => {\n      const response = await fetch('https://learning-redux-4fb13-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data');\n      }\n      const data = await response.json();\n      return data;\n    };\n    const fetchData = async () => {\n      try {\n        const cartData = await fetchCartData();\n        dispatch(cartActions.replaceCart({\n          items: cartData\n        }));\n        // You can dispatch an action here to update the cart state if needed\n      } catch (error) {\n        dispatch(uiActions.showNotification({\n          status: 'error',\n          title: 'Error',\n          message: 'Fetching cart data failed!'\n        }));\n      }\n    };\n    fetchData();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VR1M6IVuuPBVs+1RM1Xbj4a8yvI=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","Cart","Layout","Products","useSelector","useDispatch","uiActions","Notification","cartActions","jsxDEV","_jsxDEV","isInitial","App","_s","showCart","state","ui","cartIsVisibile","cart","dispatch","notification","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","changed","catch","error","fetchCartData","data","json","fetchData","cartData","replaceCart","items","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tamil/Downloads/My-React_Projects/React-Projects/DealingWithRedux/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { uiActions } from './store/Ui-Slice';\nimport Notification from './components/UI/Notification'\nimport { cartActions } from './store/cart-slice';\n\nlet isInitial = true;\n\nfunction App() {\n  const showCart = useSelector( state => state.ui.cartIsVisibile)\n  const cart = useSelector(state => state.cart)\n  const dispatch = useDispatch()\n  const notification = useSelector(state => state.ui.notification)\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!',\n      }))\n      const response = await fetch('https://learning-redux-4fb13-default-rtdb.firebaseio.com/cart.json', {\n      method: 'PUT',\n      body: JSON.stringify(cart)\n    });\n\n    if (!response.ok) {\n      throw new Error('Sending cart data failed')\n    }\n\n\n    dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Sending cart data successfully!',\n      }))\n\n    }\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n    \n    sendCartData().catch((error) => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Sending cart data failed!',\n      }))\n    })\n\n  }, [cart, dispatch])\n\n\nuseEffect(() => {\n\n  const fetchCartData = async () => {\n\n    const response = await fetch('https://learning-redux-4fb13-default-rtdb.firebaseio.com/cart.json');\n\n    if (!response.ok) {\n      throw new Error('Could not fetch cart data')\n    }\n\n    const data = await response.json();\n\n    return data\n  }\n\n  const fetchData = async () => {\n    try {\n      const cartData = await fetchCartData()\n      dispatch(cartActions.replaceCart({\n        items: cartData\n      }))\n      // You can dispatch an action here to update the cart state if needed\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n          status: 'error',\n          title: 'Error',\n          message: 'Fetching cart data failed!',\n        }))\n    }\n  }\n\n  fetchData();\n\n}, [dispatch])\n\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />)}\n\n      <Layout>\n      {showCart && <Cart /> }\n      <Products />\n    </Layout>\n    </Fragment>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}