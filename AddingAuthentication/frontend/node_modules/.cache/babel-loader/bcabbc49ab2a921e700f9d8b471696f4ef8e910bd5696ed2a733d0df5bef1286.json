{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamil\\\\Downloads\\\\My-React_Projects\\\\React-Projects\\\\AddingAuthentication\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw new Response(JSON.stringify({\n      message: 'Unsupported mode'\n    }), {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    header: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","Response","JSON","stringify","message","status","data","formData","authData","email","password","response","fetch","method","header","body","$RefreshReg$"],"sources":["C:/Users/tamil/Downloads/My-React_Projects/React-Projects/AddingAuthentication/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({request}) {\n\n  const searchParams = new URL(request.url).searchParams\n  const mode = searchParams.get('mode') || 'login';\n\n\n if (mode !== 'login' && mode !== 'signup') {\n  throw new Response(\n    JSON.stringify({message: 'Unsupported mode'}), \n    {\n      status: 422,\n      \n    }\n  );\n}\n\n  const data = await request.formData()\n\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    header: {\n      'Content-Type': 'application/json'\n    },\n\n    body: JSON.stringify(authData)\n  })\n\n}"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAE;EAEtC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAGjD,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IAC1C,MAAM,IAAIE,QAAQ,CAChBC,IAAI,CAACC,SAAS,CAAC;MAACC,OAAO,EAAE;IAAkB,CAAC,CAAC,EAC7C;MACEC,MAAM,EAAE;IAEV,CACF,CAAC;EACH;EAEE,MAAMC,IAAI,GAAG,MAAMX,OAAO,CAACY,QAAQ,CAAC,CAAC;EAErC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACN,GAAG,CAAC,OAAO,CAAC;IACxBU,QAAQ,EAAEJ,IAAI,CAACN,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGb,IAAI,EAAE;IAC5Dc,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACN,cAAc,EAAE;IAClB,CAAC;IAEDC,IAAI,EAAEb,IAAI,CAACC,SAAS,CAACK,QAAQ;EAC/B,CAAC,CAAC;AAEJ;AAAC,IAAAf,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}